DI_BasePageModel

(ApplicationDbContext dbContext,
            UserManager<IdentityUser> userManager,
            SignInManager<IdentityUser> signInManager)
            :base(dbContext, userManager, signInManager)
        { }
		
(ApplicationDbContext dbContext,
            UserManager<IdentityUser> userManager,
            SignInManager<IdentityUser> signInManager,
            IEmailSender emailSender)
            : base(dbContext, userManager, signInManager)
        {
            _emailSender = emailSender;
        }
		
async Task
await LoadSiteSettings(ViewData);

// identity username of the user, or First Last name.
@ViewData["IdentityUserName"]
// true if the user has not completed their profile and will be directed to fill that in.
@ViewData["CompleteProfilePrompt"]



// To detect if a user should have access to a page, in all methods in that page handler 
await LoadSiteSettings(ViewData);
if (_currentHelpdeskUser == null)
{
    // This happens when a user logs in, but hasn't set up their profile yet.
    return Forbid();
    // For some pages, it might make sense to redirect to the account profile page so they can immediately enter their details.
    //return RedirectToPage("/Identity/Account/Manage");
}
bool HasClaim = await RightsManagement.UserHasClaim(_context, _currentHelpdeskUser.IdentityUserId, ClaimConstantStrings.RequiredClaimName);
if (!HasClaim)
{
    return Forbid();
}